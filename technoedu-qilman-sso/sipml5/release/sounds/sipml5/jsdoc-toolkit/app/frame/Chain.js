function ChainNode(a,b){this.value=a;this.link=b}function Chain(c){this.nodes=[];this.cursor=-1;if(c&&c.length>0){this.push(c[0],"//");for(var b=1,a=c.length;b<a;b+=2){this.push(c[b+1],c[b])}}}Chain.prototype.push=function(b,a){if(this.nodes.length>0&&a){this.nodes.push(new ChainNode(b,a))}else{this.nodes.push(new ChainNode(b))}};Chain.prototype.unshift=function(b,a){if(this.nodes.length>0&&a){this.nodes[0].link=a}this.nodes.unshift(new ChainNode(b));this.cursor++};Chain.prototype.get=function(){if(this.cursor<0||this.cursor>this.nodes.length-1){return null}return this.nodes[this.cursor]};Chain.prototype.first=function(){this.cursor=0;return this.get()};Chain.prototype.last=function(){this.cursor=this.nodes.length-1;return this.get()};Chain.prototype.next=function(){this.cursor++;return this.get()};Chain.prototype.prev=function(){this.cursor--;return this.get()};Chain.prototype.toString=function(){var b="";for(var c=0,a=this.nodes.length;c<a;c++){if(this.nodes[c].link){b+=" -("+this.nodes[c].link+")-> "}b+=this.nodes[c].value.toString()}return b};Chain.prototype.joinLeft=function(){var a="";for(var c=0,b=this.cursor;c<b;c++){if(a&&this.nodes[c].link){a+=this.nodes[c].link}a+=this.nodes[c].value.toString()}return a};